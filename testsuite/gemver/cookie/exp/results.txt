
--------------- 
 GEMVER
--------------- 

Notes:

Number of operations = (10*N*N+N)

Compiler used: icc 10.1
Optimization flags used: -O3 (-parallel for parallel matlab code) (-openmp for parallel orio code)

We compare two types of codes:
 1. matlab
 2. orio

1. 'matlab' code is the original code produced by the matlab c compiler.

2. 'orio' is obtained first from the Pluto-generated code (use loop fusion, NO loop tiling, 
   NO unrolling, NO parallelization, NO vectorization), then was decorated with 
   performance annotations before being tuned by Orio.

Each code has two versions: one with static arrays, and another with dynamic arrays.
Conversion from/to static arrays to/from dynamic arrays was done manually (can be done
automatically later when time permits).


-------------------------------------
SEQUENTIAL
for N=2000,4000,6000,8000,10000,12000,14000,16000,18000,20000
-------------------------------------

--- Sequential: seconds (static arrays) ---
matlab= [0.037, 0.153, 0.344, 0.609, 0.773]
orio= [0.029, 0.116, 0.188, 0.335, 0.525]

--- Sequential: Mflops/sec (static arrays) ---
matlab= [1073.706, 1044.890, 1047.662, 1050.813, 1294.216]
orio= [1392.439, 1380.857, 1916.689, 1909.360, 1904.951]

--- Sequential: seconds (dynamic arrays) ---
matlab= [0.038, 0.156, 0.352, 0.626, 0.975, 1.406, 1.908, 2.494, 3.144, 3.877]
orio= [0.035, 0.139, 0.312, 0.553, 0.865, 1.247, 1.693, 2.223, 2.792, 3.486]

--- Sequential: Mflops/sec (dynamic arrays) ---
matlab= [1045.695, 1022.723, 1023.981, 1022.656, 1025.479, 1024.503, 1027.179, 1026.363, 1030.613, 1031.714]
orio= [1143.764, 1153.539, 1154.720, 1158.373, 1155.533, 1154.466, 1157.596, 1151.646, 1160.579, 1147.544]

Performance parameters found:
 PAR1 = False
 PAR2 = False
 PAR3 = False
 PAR4 = False
 SCR1 = False
 SCR2 = False
 U1 = 1
 U2i = 1
 U2j = 1
 U3 = 1
 U4i = 5
 U4j = 1
 VEC1 = False
 VEC2 = False
 VEC3 = False


-------------------------------------
 PARALLEL
 for N=10000
 for 1,2,3,4,5,6,7,8 cores
-------------------------------------

--- Parallel: seconds (static arrays) ---
matlab= [0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.776, 0.772]
orio= [0.545, 0.522, 0.454, 0.419, 0.433, 0.433, 0.427, 0.420]

--- Parallel: Mflops/sec (static arrays) ---
matlab= [1294.620, 1295.252, 1295.006, 1295.732, 1296.117, 1295.996, 1288.314, 1295.326]
orio= [1833.454, 1917.293, 2205.031, 2384.752, 2307.488, 2310.677, 2341.724, 2381.532]

--- Parallel: seconds (dynamic arrays) ---
matlab= [0.975, 0.978, 0.976, 0.977, 0.975, 0.977, 0.975, 0.977]
orio= [1.009, 0.895, 0.916, 0.882, 0.897, 0.899, 0.890, 0.880]

--- Parallel: Mflops/sec (dynamic arrays) ---
matlab= [1025.130, 1022.529, 1025.121, 1023.583, 1025.236, 1023.345, 1025.773, 1023.605]
orio= [991.570, 1117.056, 1091.301, 1134.027, 1115.114, 1112.393, 1123.635, 1136.897]


-------------------------------------
 PARALLEL
 for N=20000
 for 1,2,3,4,5,6,7,8 cores
-------------------------------------

--- Parallel: seconds (static arrays) ---
matlab= []
orio= []

--- Parallel: Mflops/sec (static arrays) ---
matlab= []
orio= []

--- Parallel: seconds (dynamic arrays) ---
matlab= [3.881, 3.880, 3.882, 3.880, 3.881, 3.882, 3.881, 3.881]
orio= [4.013, 3.882, 3.613, 3.471, 3.525, 3.511, 3.484, 3.470]

--- Parallel: Mflops/sec (dynamic arrays) ---
matlab= [1030.654, 1030.828, 1030.416, 1031.018, 1030.761, 1030.392, 1030.770, 1030.642]
orio= [996.695, 1030.501, 1106.972, 1152.497, 1134.685, 1139.147, 1148.265, 1152.846]

Performance parameters found:
 PAR1 = False
 PAR2 = False
 PAR3 = False
 PAR4 = True
 SCR1 = False
 SCR2 = True
 U1 = 1
 U2i = 1
 U2j = 1
 U3 = 1
 U4i = 1
 U4j = 1
 VEC1 = False
 VEC2 = False
 VEC3 = False


