=================
 Jacobi 1-D
=================

Code:

for (t=1; t<=T-1; t++) 
  for (i=1; i<=N-2; i++) 
    a[t][i] = 0.333 * (a[t-1][i-1] + a[t-1][i] + a[t-1][i+1]);

Total number of operations = 3*(T-1)*(N-2)

*********************
Sequential version
*********************
T = 1000
-------------------------------------------------------------------------------------------
 N       icc -fast -parallel      pluto       pluto+orio
-------------------------------------------------------------------------------------------
seconds:
  500k  0.277445   0.207297
 1000k  0.549079   0.403632
 1500k  0.826821   0.616596
 2000k  1.097579   0.816334
 2500k  1.384712   1.031548
gflops:
  500k 
 1000k 
 1500k 
 2000k 
 2500k 


*********************
Parallel version
*********************
T = 1000
N = 2500k
-------------------------------------------------------------------------------------------
 #cores  icc -fast -parallel       pluto      pluto+orio
-------------------------------------------------------------------------------------------
seconds:
 1   1.383581   1.036449
 2   1.176110   1.009532
 3   1.218276   0.999858
 4   1.207520   1.008300
gflops:
 1 
 2 
 3 
 4 

